//На вход подаются сведения о клиентах фитнес-центра. В первой строке указывается код K одного из клиентов, во второй строке — целое число N, 
//а каждая из последующих N строк имеет формат
//<Год> <Номер месяца> <Код клиента> <Продолжительность занятий (в часах)>
//Все данные целочисленные. Значение года лежит в диапазоне от 2000 до 2010, код клиента — в диапазоне 10−99, продолжительность занятий — в диапазоне 1−30. 
//Для каждого года, в котором клиент с кодом K посещал центр, определить месяц, в котором продолжительность занятий данного клиента была наименьшей для данного года 
//(если таких месяцев несколько, то выбирать месяц с наибольшим номером; месяцы с нулевой продолжительностью занятий не учитывать). 
//Сведения о каждом годе выводить на новой строке в следующем порядке: год, номер месяца, продолжительность занятий в этом месяце. 
//Упорядочивать сведения по возрастанию номера года.
#include <iostream>
#include <fstream>
#include <iomanip>
#include "pt4exam.h"
using namespace std;

// Для ввода используйте поток cin
// Для вывода используйте поток cout
// Между полученными результатами надо выводить символ пробела
void Solve()
{
    Task("ExamExt14");
    int n, k;

    cin >> k >> n;

    struct Persons
    {
        int month;
        int year;
        int code;
        int hours;
    }Clients[100] = {};

    struct Years
    {
        int month;
        int hours;
    } years[2011] = {};

    for (int i = 2000; i <= 2010; i++)
        years[i].hours = 31;

    for (int i = 0; i < n; i++)
    {
        cin >> Clients[i].year >> Clients[i].month >> Clients[i].code >> Clients[i].hours;
        if (Clients[i].code == k)
        {
            if (years[Clients[i].year].hours >= Clients[i].hours)
            {
                if (years[Clients[i].year].hours == Clients[i].hours)
                {
                    if (years[Clients[i].year].month < Clients[i].month) {

                        years[Clients[i].year].month = Clients[i].month;
                    }
                }
                else
                {
                    years[Clients[i].year].hours = Clients[i].hours;
                    years[Clients[i].year].month = Clients[i].month;

                }
            }
        }
    }

    for (int i = 2000; i <= 2010; i++)
        if (years[i].hours != 0 && years[i].hours != 31)
            cout << i << " " << years[i].month << " " << years[i].hours << endl;
}
